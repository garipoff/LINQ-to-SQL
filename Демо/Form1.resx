<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AAAAAAAAAAAAAAAAAAAAAAEAAAACAAAAAwAAAAMAAAAFAAAACwAAABcAAAAnAAAANwgI
        CEYQEBBSFBQUWhUVFV4TExNeDw8PXAoKClUFBQVKAQEBPAAAACwAAAAcAAAADwAAAAYAAAADAAAAAwAA
        AAIAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAGAAAADQAAABMAAAAlAwMDUSEhIIJGRUWrc3JyzJ+f
        nuLEw8Px1tbW+tvb2//U1NP/xcXE/7Cwr/+YmJf/gIB+/2lpZ/xWVlT1R0dG6D4+PdQ3Nza2JiYmkAsL
        C2AAAAAxAAAAFgAAAA8AAAAIAAAAAwAAAAEAAAABAAAABgAAABEAAAAjCgoKYV5eXcaenJv4sa6t/8bE
        w//e3Nz/8/Ly////////////+fn5/+jo6P/V1dT/vr69/6ampf+QkI7/fHx6/25ubP9nZ2X/b29t/4aG
        hP+enpz/o6Oj/3h4d9oeHh6EAAAALgAAABYAAAAJAAAAAgAAAAIAAAAIAAAAFAICAkF8fHri1NPS/8XD
        w/+zsK//vbu6/9LQ0P/p5+f/+fj4//z8/P/z8/P/5OTk/9HR0P+7u7r/o6Oi/42Ni/95eXf/ampo/2Nj
        Yf9paWf/f399/5ubmv+6urn/09PS/6mopv8XFhZuAAAAGAAAAAwAAAADAAAAAQAAAAUAAAAKBgYGN5ua
        mPDJyMj/v7y8/7Kvrv+9u7r/0tDQ/+no5//5+Pj//Pz8//T09P/k5OT/0dHQ/7u7uv+jo6L/jIyL/3l5
        d/9qamj/Y2Nh/2lpZ/9/f33/mpqZ/7W1tf/GxsX/vLu5/yopKG4AAAAKAAAACAAAAAIAAAAAAAAAAQAA
        AAEEBAQUlpWT48nIx/+/vLz/sa6u/727uv/S0dD/6Ofn//n4+P/8/Pz/9PT0/+Xl5f/R0dH/u7u6/6Oj
        ov+MjIr/eHh2/2pqZ/9jY2H/aWln/39/ff+ampn/tra1/8fHxv+5uLb/JSQkSgAAAAAAAAACAAAAAAAA
        AAAAAAAAAAAAAA4ODgufnpvhyMfG/768vP+xr67/vry7/9XU0//t7Oz//fz8//39/f/19fX/5ubm/9TU
        0/+/v77/qqqo/5SVk/+BgX//cXFv/2hoZf9qamj/f399/5qamf+2trT/xsbF/7q5t/81NTNCAAAAAAAA
        AAAAAAAAAAAAAAAAAAAgICAAhYSCC6+urOHIx8b/xMLC/7a0s/+7ubj/wsDA/8bFxf/Hx8f/xcXF/7+/
        v/+zs7P/oKCg/4uLiv92dnX/ZmZl/2BgXv9iYmH/a2tp/3h4dv+Li4n/oqKh/7u7uv/Jycn/trWz/5WU
        kUI8PDsAAAAAAAAAAAAYGBcAS0tJAJybmQCmpaILqqmm4bOxsf+XlZX/e3l4/2dmZf9aWVn/VVRT/1hX
        V/9gX1//aGho/2pqav9fX1//TU1M/zg5OP8tLS3/Li4t/zY2Nv9ERET/VFRT/2ZmZf96enn/l5eW/7a2
        t/+zsrH/np2ZQqGgnQBkY2EAHh4dAJ+enACrqqcApqWjAKSjoQujoaDmfXt7/1FQUP9QT0//YmBg/399
        ff+goJ//v7+//9DQ0P/U1NP/zMzM/76+vf+qqqn/kpKR/3x8ev9oaGf/WlpY/1JSUP9RUVD/VlZV/1VV
        Vf9UVFX/c3N0/6KipP+ioaBEoJ+eAKempQCfnp0Aq6qqAKqpqQCqqagAqqmpAqWkpKWSkpH/mpiY/6qn
        p//Avb3/2tnY//Hw8P////////////n5+f/o6Oj/1dXU/76+vf+mpqX/kJCO/3x8ev9tbWr/ZWVj/2tr
        af+AgH//l5eW/52enf+Ojo7/lpaX4KGhohmhoaEAoaGhAKKiowChoJ0AoaCdAKGgnQCgn5wDpKOhr8XE
        xP/EwsH/s7Gw/728u//S0ND/6efn//n4+P/8/Pz/8/Pz/+Tk5P/R0dD/u7u6/6Ojov+NjYv/eXl3/2pq
        aP9jY2H/aWln/39/ff+bm5r/urq5/8rKyf+sq6nlmJeUIJqZlgCamZYAmpmWAKCfnACgn5wAoJ+cAJ+e
        mwurqqfmxsTE/768vP+yr67/vbu6/9LQ0P/p6Of/+fj4//v7+//09PT/5OTk/9HR0f+7u7r/o6Oi/4yN
        i/95eXf/ampo/2NjYf9paWf/f399/5ubmf+1tbX/xsbF/7S0sv+amZZFmpmWAJqZlgCamZYAoJ+cAKCf
        nACgn5wAn56bC6qppuHFxMP/vry8/7Gurf+9urr/0tHQ/+jn5//5+Pn//Pz8//T09P/k5eT/0dHR/7u7
        uv+jo6L/jIyK/3h4dv9qamj/Y2Nh/2lpZ/9/f33/mpqZ/7W1tf/GxsX/s7Ox/5qZlkKbmpcAm5qXAJua
        lwChoJ0AoaCdAKGgnQCgn5wLqqmn4cXEw/++vLz/sa6u/768u//V09P/7ezs//39/f/+/v7/9vb2/+fn
        5//U1dT/wMC//6qqqP+UlZP/gIB//3Bwbv9mZmT/ampo/35+fP+ampj/tra1/8bGxv+zsrD/mpmWQpua
        lwCbmpcAm5qXAKCfnQCgn50AoJ+dAJ+enAuqqafhyMfG/8TCwv+3tbT/vbu6/8XEw//Lysr/zczM/8vK
        yv/ExMT/uLi4/6Wlpf+QkI//e3t6/2trav9kZGL/ZWVk/2xsa/94eHf/i4uJ/6Kiof+7u7r/ycnI/7Oz
        sf+amZZCm5qXAJualwCbmpcAoJ+cAKCfnACgn5wAoJ+bC6qpp+G2tLT/nJqa/4B+ff9tbGv/X15d/1lY
        V/9bWlr/YmFh/2lpaf9paWn/X19e/0tLS/84ODf/LS0s/y0tLf83Nzb/RkZF/1ZWVv9paWj/fn59/5ub
        m/+5ubn/s7Oy/5qZlkKamZYAmpmWAJqZlgCioZ8AoqGfAKKhnwCjoqALoqCf5318fP9RUFD/SklJ/1pY
        WP93dnX/mJeX/7a1tf/Ix8f/zc3N/8bGxv+4uLj/paWk/46OjP93d3b/ZWVj/1dXVf9QUE7/UFBP/1NT
        Uv9QUFH/U1NU/3V1d/+jo6T/oaCfRZ+enACfnpwAn56cAKqpqQCqqakAqqmpAKqpqQOnp6ask5KR/5CO
        jv+hn57/vLq5/9nY1//y8fH////////////6+vr/6erp/9XV1f+/v77/p6em/5CQj/98fHr/bW1r/2Vl
        Y/9ra2n/f399/5GRkP+Tk5L/i4uL/5qam+SioqMeoqGiAKKhogCioaIAoaCdAKGgnQChoJ0AoJ+cAqin
        panGxcX/xcLC/7SxsP++vLv/0tDQ/+jn5//5+Pj/+/v7//P08//k5OT/0dHR/7u7uv+kpKL/jI2L/3l5
        d/9qamj/Y2Nh/2lpZ/9/f33/nJyb/7u7uv/Kysn/r66s4pmYlhybmpcAm5qXAJualwCgn5wAoJ+cAKCf
        nACfnpsLqqmn58bExP++vLz/sa6t/727uv/S0ND/6Ofn//n5+f/7+/v/9PT0/+Xl5P/R0dH/u7u6/6Oj
        ov+MjYv/eXl3/2pqaP9jY2H/aWln/39/ff+ampn/tra1/8bGxv+0tLH/mpmWRZualgCbmpYAm5qWAKCf
        nQCgn50AoJ+dAJ+enAuqqafhxcTD/768vP+xrq3/vbu6/9LQ0P/o5+f/+fj4//z8/P/z8/P/5OTk/9HR
        0P+7u7r/o6Oi/4yMiv94eHf/ampo/2NjYf9paWf/fn59/5qamf+2trX/xsbF/7Ozsf+amZZCm5qXAJua
        lwCbmpcAoaCdAKGgnQChoJ0AoJ+cC6qpp+HFxMP/vry8/7Curf+8urn/0tDQ/+no6P/6+fn//Pz8//T0
        9P/l5eX/09PT/7+/vv+pqaj/k5OR/39/ff9ubmz/ZGRi/2dnZf98fHr/mZmX/7a2tf/GxsX/s7Ox/5qZ
        l0KbmpcAm5qXAJualwCgn50AoJ+dAKCfnQCfnpwLqqmn4cXEw//Bv77/uLW1/8bEw//Z19f/6unp//j3
        9//+/v7//f39//Dw8P/Z2dn/vr69/6GhoP+IiIf/enp4/3Z2dP96enj/goKA/5CQj/+jo6L/uLi3/8XF
        xf+ysrD/m5mWQpualwCbmpcAm5qXAJ6dmgCenZoAnp2aAJ2cmQurqqjhxsTE/8G/vv+7uLf/u7i3/726
        uf/FwsL/0tDP/+Ph4f/09PP/+fj4/+Dg3/+urq3/fHx7/2dnZf9sbGr/f399/5SUkv+np6b/tra1/8LC
        wP/MzMv/0tLR/7i3tf+Yl5RCmZiVAJmYlQCZmJUAqKelAKinpQCop6UAp6akC768u+fFw8P/wb++/8C+
        vf+/vbz/vbu6/7y5uP+8ubj/v7y8/8rIx//e3Nv/29ra/6qqqf+MjIv/n5+d/7e3t//Gxsf/z8/P/9LS
        0//T09T/09PV/9PT1P/V1db/z8/R/6mopkWjo6EApaSiAKWkogDW1dUA1tXVANbV1QDW1dUE2dfXt9va
        2v/c29v/3Nvb/97c3P/e3t7/39/e/97e3v/a2tr/z8/O/7+/vf+8u7r/ycnI/9DQzv/Jycj/xMTD/8LC
        wf/Dw8L/xcXF/8fHx//Jycr/y8vM/8zMzf/Nzc7tzs7QJc3NzwDNzc8Azc3PANva2gDb2toA29raANva
        2gDd3N0O397feuHh4dPi4uL+4ODg/9vb2//S09L/xsbF/7W1tP+mp6T/paWi/7e3tf/R0dH/4eHh/9/f
        3v/T09H/xsbE/76+uv+4uLX/traz/7W1sv+0tLHlsbGvm7y8uynMzM0Ay8vMAMvLzADLy8wA2tnZANrZ
        2QDa2dkA2tnZANzc3ADY2NgA0NDQBMfHxjC8vLtgsbGvjaampLGdnZvLmpqX36Cgnu2vr632v7+++87O
        zfza2tr44uLi8eLi4uTc3NzT0tLRusfHxJm7u7hvr6+rQKamoxCnp6QAu7u6AMzMzQDLy8wAy8vMAMvL
        zAD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A/////+AAAAeAAAAAAAAAAAAAAAAAAAAAgAAABeAAAAfgAAAH4AAAB+AA
        AAfgAAAH4AAAB+AAAAfgAAAH4AAAB+AAAAfgAAAH4AAAB+AAAAfgAAAH4AAAB+AAAAfgAAAH4AAAB+AA
        AAfgAAAH4AAAB/AAAA/8AAA///////////8=
</value>
  </data>
</root>